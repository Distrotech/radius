This is Info file radius.info, produced by Makeinfo version 1.68 from
the input file radius.texinfo.

INFO-DIR-SECTION GNU radius
START-INFO-DIR-ENTRY
* Radius: (radius).     The GNU Radius
END-INFO-DIR-ENTRY

   This file documents the GNU radius

   Published by the Free Software Foundation 59 Temple Place, Suite 330
Boston, MA  02111-1307 USA

   Copyright (C) 1999 Sergey Poznyakoff Permission is granted to make
and distribute verbatim copies of this manual provided the copyright
notice and this permission notice are preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the sections entitled "The GNU Manifesto", "Distribution" and "GNU
General Public License" are included exactly as in the original, and
rovided that the entire resulting derived work is distributed under the
terms of a permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the sections entitled "The GNU Manifesto",
"Distribution" and "GNU General Public License" may be included in a
translation approved by the Free Software Foundation instead of in the
original English.


File: radius.info,  Node: Radctl,  Next: Builddbm,  Prev: Radauth,  Up: Top

Radctl
******

   `radctl' is a control interface to `radiusd' daemon. It allows user
running it to query `radiusd' about various aspects of its work and
issue administrative commands to it.

   `Radctl' communicates with radius using either a regular UNIX-style
signal interface or a special UDP control channel.

* Menu:

* Signal Interface::            Invoking radctl to use signal interface.
* Control Channel::             Using radius control channel.


File: radius.info,  Node: Signal Interface,  Next: Control Channel,  Up: Radctl

Signal Interface
****************

   In order to use the signal interface invoke `Radctl' with `-s' or
`--signal' option. The usage is:

     radctl -s COMMAND [ARGS]

   Where COMMAND is a command telling `radctl' which actions to take,
and ARGS are optional arguments to the command. Only one command can be
specified per invocation.

   The valid COMMANDs are as follows:

`start [ARGS]'
     If `radiusd' is not running already, it is started. When present,
     ARGS are passed as the command line to the server.

`stop'
     Stops running `radiusd'.

`restart [ARGS]'
     Stops the server and then starts it again. When present, ARGS are
     passed as the command line to the server.

`reload'
     Causes running `radiusd' server to re-read its configuration files.

`dumpdb'
     Tells `radiusd' to dump its user hash table into the file
     `/usr/adm/radius.parse'. This can be used for debugging
     configuration files.

`status'
     `radiusd' reports its memory usage statistics. The information is
     logged under `Info' log level.

`which'
     Reports the information about the running copy of `radiusd'.

   No special configuration is needed in order to use radius signal
interface.


File: radius.info,  Node: Control Channel,  Prev: Signal Interface,  Up: Radctl

Control Channel
***************

   Control channel offers much more flexible monitoring and control
capabilities than regular UNIX-style signal interface. `radctl' uses
control channel when invoked without `-s' option.

   When using control channel interface, `radctl' switches to
interactive mode, which allows you to directly send commands to the
server and to immediately see the server replies.

   Since this option uses UDP channel, special attention must be paid
to security issues while configuring the server.

* Menu:


* Configuring:radctl configuration.     Configuring radius to use
                                        control channel.
* Invocation:radctl invocation.         How to invoke `radctl'.
* Commands:radctl commands.             Commands available in interactive
                                        mode.


File: radius.info,  Node: radctl configuration,  Next: radctl invocation,  Up: Control Channel

Configuring `radctl'.
*********************

   To configure Radius to use `radctl' control channel the following
actions must be performed:

Configure the port number to listen to.
     The port number to listen to incoming control requests is set in
     `cntl' statement in `config' file.

Create administrative huntgroup.
     Since `radctl' interface provides some potentially dangerous
     commands, we recommend to restrict its usage to some trusted
     hosts. This can be done using huntgroups mechanism *Note
     huntgroups::.  The administrative huntgroup definition should
     include the trusted host IP address and name of a command which is
     allowed from this host. The command name must be listed in `State'
     attribute.  See example below.

Create administrative user.
     The administrative user profile should be created in the `users'
     file. It should be restricted to administrative huntgroup.

Example `radctl' configuration.
===============================

   In the example below, we suppose that port 5000 is chosen as Radius
administrative port, administrative user name is ROOT, and he is
allowed to connect only from localhost. Then the following modifications
would be needed:

`config' file
-------------

     cntl {
             port 5000;
     };

`huntgroups' file
-----------------

     ROOT    NAS-IP-Address = 127.0.0.1, State = "getpid"            NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "get-m-stat"        NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "get-q-stat"        NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "reload"            NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "restart"           NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "shutdown"          NULL
     ROOT    NAS-IP-Address = 127.0.0.1, State = "dumpdb"            NULL

`users'
-------

     ROOT    Auth-Type = System,
                     Huntgroup-Name = "ROOT"
             Service-Type = RADIUS-Administrative-User


File: radius.info,  Node: radctl invocation,  Next: radctl commands,  Prev: radctl configuration,  Up: Control Channel

How to invoke `radctl'.
***********************

   When started in control channel mode, `radctl' understands the
following command line options:

`-d DIR'
`--directory DIR'
     Specifies the directory where radius dictionary files and
     `radctl.rc' file reside.

`-S HOST'
`--server HOST'
     Specifies the name of the server to connect to. *Please note* that
     this is not a domain name, but rather the server ID under which it
     was registered using `(set! rad-server-list ...)' statement in
     `radctl.rc' file. [FIXME:add reference]

`-u USERNAME'
`--user USERNAME'
`-l USERNAME'
`--login USERNAME'
     Specifies the username. If you start `radctl' without this option,
     you will have to issue `user' command from inside it.

`-p PASSWORD'
`--password PASSWORD'
     Specifies the password to be used while connecting to the server.
     Special password `.' (dot) tells `radctl' to prompt you for the
     password with terminal echoing turned off.

`-v'
`--verbose'
     Enable verbose mode. In verbose mode all conversation with the
     Radius server is echoed on stderr.

`-h'
`--help'
     Display short usage help and exit.


File: radius.info,  Node: radctl commands,  Prev: radctl invocation,  Up: Control Channel

Radctl commands
***************

   A command in radctl interactive mode consists of a command verb and
optional arguments. Any non-ambiguous abbreviated form of a command
verb is accepted. Command arguments, however, may not be abbreviated.

   Commands fall into two groups: those that control the behaviour of
the `radctl' monitor itself, and those that are sent directly to the
server.

Internal commands
-----------------

   These commands modify the behaviour of radctl itself.

`help'
     Output short help information.

`quit'
`bye'
     Exit the program.

`server'
     Display the ID of the current radius server.

`server ID'
     Set current radius server.

`verbose'
     Toggle verbose mode on/off. When verbose mode is on, `radctl'
     displays to stderr detailed log of its conversation with Radius
     server.

`login NAME'
`user NAME'
     Use NAME as administrative user login name.

`password PASS'
     Use the specified password. If `.' (dot) is entered instead of
     plaintext password, `radctl' reads the password from `/dev/tty'
     with character echoing turned off and generation of signals by tty
     special characters disabled. This reduces the possibility of the
     password being compromised.

`list'
`list active'
     Display detailed information about current radius server.

`list avail'
     List available radius servers. Only server ID and hostname (or IP
     address) are listed.

Server commands
---------------

   These are sent directly to the server:

`getpid'
     Output the PID of the master Radius process.

`get-m-stat'
     Display detailed memory usage statistics.

`get-q-stat'
     Display detailed queue statistics. Four fields are displayed for
     each queue:
       1. Queue number

       2. Number of pending requests

       3. Number of processed requests still residing in the queue

       4. Total number of requests in queue

`dumpdb'
     Tells `radiusd' to dump its user database, i.e. the parsed
     contents of files `hints', `huntgroups' and `users' to disk file.
     The filename is `radlog/radius.parse' *Note Naming conventions::.

`reload WHAT'
     Instructs the server to reload a particular part of its
     configuration.  The WHAT argument specifies which of the
     configuration files to reload:

    `all'
          Reload all configuration files.

    `users'
          Reload the `users' file.

    `dict'
          Reload `dictionary' file. This implies reloading of `users',
          `huntgroups' and `hints'.

    `huntgroups'
          Reload `huntgroups' file.

    `hints'
          Reload `hints' file.

    `clients'
          Reload `clients' file.

    `naslist'
          Reload `naslist' file.

    `realms'
          Reload `realms' file.

    `deny'
          Reload `access.deny' file.

    `sql'
          Reload `sqlserver' file.

    `rewrite'
          Reload `rewrite' file.

`restart'
     Instructs Radius to flush all request queues and restart itself. In
     order to use this command, the `radiusd' program should have been
     started with its full pathname.

`shutdown'
     Instructs Radius to flush all pending requests and shut down.

`suspend'
     Tells radiusd to stop servicing incoming requests. The server
     becomes idle and listens only to the control channel.

`continue'
     Undo the effect of the last `suspend' command.


File: radius.info,  Node: Builddbm,  Next: Radscm,  Prev: Radctl,  Up: Top

Builddbm
********

Usage
-----

   `Builddbm' converts the plaintext Radius users database into DBM
files. Some versions of Radius daemon have used this to speed up the
access to the users database.

   Howewer in this implementation things go the other way around.  The
server reads entire plaintext database, converts it into internal form
and stores into hash table which provides for fast access. Actually,
using DBM version of the users database slows down the access unless
the machine which runs Radius daemon is short of address space for the
daemon to store the users database into.

Syntax
------

   When used without arguments, `builddbm' utility attempts to convert
file `raddb/users' into `raddb/users.db' or `raddb/users.pag',
`raddb/users.dir' pair, depending on the version of DBM library used.

   If used with one argument, the argument is taken as the name of the
plaintext database file to operate upon.

   Use the following command line options to modify the operation of
`buildbm':

`-d DIR'
     Specifies alternate directory for the Radius configuration files.
     This defaults to `{No Value For "raddb"}'.

`-i FILENAME'
     Specifies alternate input file instead of default `raddb/users'.
     The `-i' option is provided for compatibility with other versions
     of `builddm'. It can safely be omitted.

`-h'
     Outputs short usage summary and exits with 0 exit code.


File: radius.info,  Node: Radscm,  Prev: Builddbm,  Up: Top

Radscm: A guile interface to radius functions.
**********************************************

   `Radscm' is a Scheme interpreter based on Guile with the addition of
special functions and variables for communicating with `radiusd'. This
chapter concentrates on the special features provided by `radscm'.
Please refer to Guile documentation for information about Scheme and
Guile *Note Overview: (guile)Top.

Variables
=========

 - %raddb-path:
     A path to radius configuration directory.


 - rad-server-list:
     A list of radius servers. Each element of the list is:

          (list ID-STRING HOST-STRING SECRET-STRING AUTH-NUM ACCT-NUM CNTL-NUM)

     where:

     ID-STRING                   Server ID,                     
     HOST-STRING                 Server hostname or IP address, 
     SECRET-STRING               Shared secret key to use,      
     AUTH-NUM                    Authentication port number,    
     ACCT-NUM                    Accounting port number,        
     CNTL-NUM                    Control channel port number.   

     Thus, each entry can be used as an argument to
     rad-client-set-server or rad-client-add-server.

Functions
=========

 - rad-send-internal: PORT-NUMBER CODE-NUMBER PAIR-LIST
     Sends the request to currently selected server.  Arguments are:

    PORT-NUMBER
          Port number to use. These values are allowed:

          0                         Authentication port,      
          1                         Accounting port,          
          2                         Control port.             

          The actual port numbers are those configured for the given
          server.

    CODE-NUMBER
          Request code.

    PAIR-LIST
          List of Attribute-value pairs. Each pair is either
                       (cons ATTR-NAME-STRING  VALUE)
          or
                       (cons ATTR-NUMBER  VALUE)

     Return:

     On success
          	(list RETURN-CODE-NUMBER PAIR-LIST)
     On failure:
          	'()


 - rad-send: PORT-NUMBER CODE-NUMBER PAIR-LIST . VERBOSE
     Sends a radius request. Actually it does the same work as
     rad-send-internal but if VERBOSE is specified, the verbose report
     about interaction with the radius server is printed.


 - rad-client-list-servers:
     List currently configured servers. Two columns for each server are
     displayed: Server ID and IP address.


 - rad-get-server:
     Returns the ID of the currently selected server.


 - rad-client-set-server: LIST
     Selects for use the server described by LIST. A LIST should be:

          (list ID-STRING HOST-STRING SECRET-STRING AUTH-NUM ACCT-NUM CNTL-NUM)

     where:

     ID-STRING                   Server ID,                     
     HOST-STRING                 Server hostname or IP address, 
     SECRET-STRING               Shared secret key to use,      
     AUTH-NUM                    Authentication port number,    
     ACCT-NUM                    Accounting port number,        
     CNTL-NUM                    Control channel port number.   

 - rad-client-add-server: LIST
     Adds the server described by LIST to the list of active servers.
     A LIST should be:

          (list ID-STRING HOST-STRING SECRET-STRING AUTH-NUM ACCT-NUM CNTL-NUM)

     where:

     ID-STRING                   Server ID,                     
     HOST-STRING                 Server hostname or IP address, 
     SECRET-STRING               Shared secret key to use,      
     AUTH-NUM                    Authentication port number,    
     ACCT-NUM                    Accounting port number,        
     CNTL-NUM                    Control channel port number.   

 - rad-dict-name->attr: NAME-STRING
     Returns a dictionary entry for the given attribute name or #f if
     no such name was found in the dictionary.  The entry is a list of
     the form:

          	(NAME-STRING ATTR-NUMBER TYPE-NUMBER VENDOR)

     where:

     NAME-STRING                 is the attribute name,         
     VALUE-NUMBER                is the attribute number,       
     TYPE-NUMBER                 is the attribute type,         
     VENDOR                      is the vendor PEC, if the      
                                 attribute is a                 
                                 Vendor-Specific one, or #f     
                                 otherwise.                     
     	
 - rad-dict-name->value: ATTR VALUE-STRING
     Returns the numeric value of the VALUE-STRING symbolic value
     pertaining to attribute ATTR. ATTR can be either the attribute
     name or its number.


 - rad-dict-pec->vendor: PEC-NUMBER
     Converts PEC to the vendor name


 - rad-read-no-echo: PROMPT-STRING
     Prints the given PROMPT-STRING, disables echoing, reads a string
     up to the next newline character, restores echoing and returns the
     string entered.  This is the interface to the C getpass(3)
     function.


 - rad-client-timeout: NUMBER
     Sets the timeout for waiting to the server reply.


 - rad-client-retry: NUMBER
     Sets the number of retries for sending requests to a radius server.


 - rad-format-code: DEST-BOOL CODE-NUMBER
     Format a radius reply code into a human-readable form.  DEST-BOOL
     has the same meaning as in format.


 - rad-format-pair: DEST-BOOL PAIR
     Format a radius attribute/value pair for output.  DEST-BOOL has
     the same meaning as in format.  PAIR is eihter
          		(cons NAME-STRING VALUE)
     	or
          		(cons ATTR-NUMBER VALUE)

     where VALUE may be of any type appropriate for the given attribute.


 - rad-print-pairs: DEST-BOOL PAIR-LIST
     Output the radius attribute/value pairs from the PAIR-LIST.
     DEST-BOOL has the same meaning as in format.  PAIR-LIST is a list
     of pairs in the form

          		(cons NAME-STRING VALUE)

     	or

          		(cons ATTR-NUMBER VALUE)

     where VALUE may be of any type appropriate for the given attribute.

     All "Reply-Message" pairs from the list are concatenated and
     displayed as one.


 - rad-format-reply-msg: PAIR-LIST . TEXT
     Concatenate and print text from all "Reply-Message" pairs from the
     PAIR-LIST. If TEXT is specified, it is printed before the
     concatenated text.


 - rad-list-servers:
     For each server from `rad-server-list' print its ID and hostname
     or IP address.


 - rad-select-server: ID-STRING
     Select the server identified by ID-STRING as a current server. The
     server data are looked up in rad-server-list variable.


 - rad-add-server: ID-STRING
     Add the server identified by ID-STRING to the list of current
     servers.  The server data are looked up in rad-server-list
     variable.



File: radius.info,  Node: Attribute list,  Up: Top

Attribute list
**************

   The following chapters describe the most frequently used RADIUS
attributes.

* Menu:

Authentication Attributes
* User-Name::
* Password::
* CHAP-Password::
* NAS-IP-Address::
* NAS-Port-Id::
* Service-Type::
* Framed-Protocol::
* Framed-IP-Address::
* Framed-IP-Netmask::
* Framed-Routing::
* Framed-MTU::
* Framed-Compression::
* Reply-Message::
* Callback-Number::
* Callback-Id::
* Framed-Route::
* State::
* Class::
* Vendor-Specific::
* Session-Timeout::
* Idle-Timeout::
* Termination-Action::
* Called-Station-Id::
* Calling-Station-Id::
* NAS-Identifier::
* NAS-Port-Type::

Accounting Attributes
* Acct-Status-Type::
* Acct-Delay-Time::
* Acct-Input-Octets::
* Acct-Output-Octets::
* Acct-Session-Id::
* Acct-Authentic::
* Acct-Session-Time::
* Acct-Input-Packets::
* Acct-Output-Packets::
* Acct-Terminate-Cause::

Radius Internal Attributes
* Auth-Type::
* Menu::
* Termination-Menu::
* Prefix::
* Suffix::
* Group::
* Crypt-Password::
* Huntgroup-Name::
* Simultaneous-Use::
* Strip-User-Name::
* Fall-Through::
* Add-Port-To-IP-Address::
* Exec-Program::
* Exec-Program-Wait::
* Hint::
* Pam-Auth::
* Login-Time::
* Replace-User-Name::
* Rewrite-Function::


File: radius.info,  Node: User-Name,  Next: Password,  Up: Attribute list

User-Name
*********

     ATTRIBUTE  User-Name         1                    string

   This Attribute indicates the name of the user to be authenticated or
accounted. It is used in Access-Request and Accounting attributes.  The
length of the username is usually limited by some arbitrary value.  By
default, Radius supports usernames up to 32 characters long. This value
can be modified by redefining `RUT_USERNAME' macro in include/radutmp.h
file in the distribution directory and recompiling the program.

   Some NASes have peculiarities about sending long usernames. For
example, Specialix Jetstream 8500 24 port access server inserts a `/'
character after the 10th character if the username is longer than 10
characters. In such cases, we recommend to apply rewrite functions in
order to bring username to its "normal" form *Note rewrite::.


File: radius.info,  Node: Password,  Next: CHAP-Password,  Prev: User-Name,  Up: Attribute list

Password
********

     ATTRIBUTE  Password          2                    string

   This Password attribute indicates the password of the user to be
authenticated, or the user's input following an Access-Challenge.  It
is only used in Access-Request packets.

   On transmission, the password is hidden.  The password is first
padded at the end with nulls to a multiple of 16 octets.  A one- way
MD5 hash is calculated over a stream of octets consisting of the shared
secret followed by the Request Authenticator.  This value is XORed with
the first 16 octet segment of the password and placed in the first 16
octets of the String field of the Password Attribute.

   If the password is longer than 16 characters, a second one-way MD5
hash is calculated over a stream of octets consisting of the shared
secret followed by the result of the first xor.  That hash is XORed
with the second 16 octet segment of the password and placed in the
second 16 octets of the String field of the Password Attribute.

   If necessary, this operation is repeated, with each xor result being
used along with the shared secret to generate the next hash to xor the
next segment of the password, to no more than 128 characters.


File: radius.info,  Node: CHAP-Password,  Next: NAS-IP-Address,  Prev: Password,  Up: Attribute list

CHAP-Password
*************

     ATTRIBUTE  CHAP-Password     3                    string

   This Attribute indicates the response value provided by a PPP
Challenge-Handshake Authentication Protocol (CHAP) user in response to
the challenge.  It is only used in Access-Request packets.

   The CHAP challenge value is found in the CHAP-Challenge Attribute
(60) if present in the packet, otherwise in the Request Authenticator
field.


File: radius.info,  Node: NAS-IP-Address,  Next: NAS-Port-Id,  Prev: CHAP-Password,  Up: Attribute list

NAS-IP-Address
**************

     ATTRIBUTE  NAS-IP-Address    4                    ipaddr

   This Attribute indicates the identifying IP Address of the NAS which
is requesting authentication of the user.  It is only used in
Access-Request packets. Each Access-Request packet should contain
either `NAS-IP-Address' or `NAS-Identifier' attribute *Note
NAS-Identifier::.


File: radius.info,  Node: NAS-Port-Id,  Next: Service-Type,  Prev: NAS-IP-Address,  Up: Attribute list

NAS-Port-Id
***********

     ATTRIBUTE  NAS-Port-Id       5                    integer

   This attribute indicates the physical port number of the NAS which
is authenticating the user.  It is only used in Access-Request packets.
Note that this is using "port" in its sense of a physical connection
on the NAS, not in the sense of a TCP or UDP port number.

   Some NASes try to encode various information in the NAS-Port-Id
attribute value. For example MAX Ascend terminal server constructs
`NAS-Port-Id' concatenating line type (one-digit), line number
(two-digits), and the channel number (two-digits) thus producing a
5-digit port number. In order to "normalize" such encoded port numbers
we recommend to use a rewrite function *Note rewrite::.  A rewrite
function for MAX Ascend servers is provided in the distribution.


File: radius.info,  Node: Service-Type,  Next: Framed-Protocol,  Prev: NAS-Port-Id,  Up: Attribute list

Service-Type
************

     ATTRIBUTE  Service-Type      6                    integer
     VALUE      Service-Type      Login-User           1
     VALUE      Service-Type      Framed-User          2
     VALUE      Service-Type      Callback-Login-User  3
     VALUE      Service-Type      Callback-Framed-User 4
     VALUE      Service-Type      Outbound-User        5
     VALUE      Service-Type      Administrative-User  6
     VALUE      Service-Type      NAS-Prompt-User      7
     VALUE      Service-Type      Authenticate-Only    8
     VALUE      Service-Type      Call-Check           10
     
     VALUE      Service-Type      RADIUS-Administrative-User 20

   This attribute indicates the type of service the user has requested,
or the type of service to be provided.  It may be used in both
Access-Request and Access-Accept packets.

   When used in an Access-Request the Service type represents a hint
Radius server that the NAS has reason to believe the user would prefer
the kind of service indicated.

   When used in an Access-Accept, the Service type is an indication to
the NAS that the user must be provided this type of service.

   The meaning of various service-types is as follows:

`Login-User'
     The user should be connected to a host.

`Framed-User'
     A Framed Protocol should be started for the User, such as PPP or
     SLIP.  The `Framed-IP-Address' attribute *Note Framed-IP-Address::
     would supply the IP address to be used.

`Callback-Login-User'
     The user should be disconnected and called back, then connected to
     a host.

`Callback-Framed-User'
     The user should be disconnected and called back, then a Framed
     Protocol should be started for the User, such as PPP or SLIP.

`Outbound-User'
     The user should be granted access to outgoing devices.

`Administrative-User'
     The user should be granted access to the administrative interface
     to the NAS from which privileged commands can be executed.

`NAS-Prompt'
     The user should be provided a command prompt on the NAS from which
     non-privileged commands can be executed.

`Authenticate-Only'
     Only Authentication is requested, and no authorization information
     needs to be returned in the Access-Accept

`Call-Check'
`Callback-NAS-Prompt'
     The user should be disconnected and called back, then provided a
     command prompt on the NAS from which non-privileged commands can
     be executed.

`RADIUS-Administrative-User'
     FIXME


File: radius.info,  Node: Framed-Protocol,  Next: Framed-IP-Address,  Prev: Service-Type,  Up: Attribute list

Framed-Protocol
***************

     ATTRIBUTE  Framed-Protocol   7                    integer
     VALUE      Framed-Protocol   PPP                  1
     VALUE      Framed-Protocol   SLIP                 2

   This Attribute indicates the framing to be used for framed access.
It may be used in both Access-Request and Access-Accept packets.


File: radius.info,  Node: Framed-IP-Address,  Next: Framed-IP-Netmask,  Prev: Framed-Protocol,  Up: Attribute list

Framed-IP-Address
*****************

     ATTRIBUTE  Framed-IP-Address  8                    ipaddr

   This Attribute indicates the address to be configured for the user.
It may be used in Access-Accept packets.  It may be used in an
Access-Request packet as a hint by the NAS to the server that it would
prefer that address, but the server is not required to honor the hint.

   The value 0xFFFFFFFF indicates that the NAS should allow the user to
select an address (e.g. Negotiated). The value 0xFFFFFFFE indicates
that the NAS should select an address for the user (e.g. assigned from
a pool of addresses kept by the NAS).  Other valid values indicate that
the NAS should use that value as the user's IP address.


File: radius.info,  Node: Framed-IP-Netmask,  Next: Framed-Routing,  Prev: Framed-IP-Address,  Up: Attribute list

Framed-IP-Netmask
*****************

     ATTRIBUTE  Framed-IP-Netmask  9                    ipaddr

   This Attribute indicates the IP netmask to be configured for the
user when the user is a router to a network.  It may be used in
Access-Accept packets.  It may be used in an Access-Request packet as a
hint by the NAS to the server that it would prefer that netmask, but
the server is not required to honor the hint.


File: radius.info,  Node: Framed-Routing,  Next: Framed-MTU,  Prev: Framed-IP-Netmask,  Up: Attribute list

Framed-Routing
**************

     ATTRIBUTE  Framed-Routing    10                   integer
     VALUE      Framed-Routing    None                 0
     VALUE      Framed-Routing    Broadcast            1
     VALUE      Framed-Routing    Listen               2
     VALUE      Framed-Routing    Broadcast-Listen     3

   This Attribute indicates the routing method for the user, when the
user is a router to a network.  It is only used in Access-Accept
packets.


File: radius.info,  Node: Framed-MTU,  Next: Framed-Compression,  Prev: Framed-Routing,  Up: Attribute list

Framed-MTU
**********

     ATTRIBUTE  Framed-MTU        12                   integer

   This Attribute indicates the Maximum Transmission Unit to be
configured for the user, when it is not negotiated by some other means
(such as PPP).  It is only used in Access-Accept packets.


File: radius.info,  Node: Framed-Compression,  Next: Reply-Message,  Prev: Framed-MTU,  Up: Attribute list

Framed-Compression
******************

     ATTRIBUTE  Framed-Compression  13                   integer
     VALUE      Framed-Compression  None                 0
     VALUE      Framed-Compression  Van-Jacobson-TCP-IP  1

   This Attribute indicates a compression protocol to be used for the
link.  It may be used in Access-Accept packets.  It may be used in an
Access-Request packet as a hint to the server that the NAS would prefer
to use that compression, but the server is not required to honor the
hint.

   More than one compression protocol Attribute may be sent.  It is the
responsibility of the NAS to apply the proper compression protocol to
appropriate link traffic.


File: radius.info,  Node: Reply-Message,  Next: Callback-Number,  Prev: Framed-Compression,  Up: Attribute list

Reply-Message
*************

     ATTRIBUTE  Reply-Message     18                   string

   This Attribute indicates text which may be displayed to the user.

   When used in an Access-Accept, it is the success message.

   When used in an Access-Reject, it is the failure message.  It may
indicate a dialog message to prompt the user before another
Access-Request attempt.

   When used in an Access-Challenge, it may indicate a dialog message
to prompt the user for a response.

   Multiple `Reply-Message' attributes may be included and if any are
displayed, they must be displayed in the same order as they appear in
the packet.


File: radius.info,  Node: Callback-Number,  Next: Callback-Id,  Prev: Reply-Message,  Up: Attribute list

Callback-Number
***************

     ATTRIBUTE  Callback-Number   19                   string

   This Attribute indicates a dialing string to be used for callback.
It may be used in Access-Accept packets.  It may be used in an
Access-Request packet as a hint to the server that a Callback service
is desired, but the server is not required to honor the hint.


File: radius.info,  Node: Callback-Id,  Next: Framed-Route,  Prev: Callback-Number,  Up: Attribute list

Callback-Id
***********

     ATTRIBUTE  Callback-Id       20                   string

   This Attribute indicates the name of a place to be called, to be
interpreted by the NAS.  It may be used in Access-Accept packets.


File: radius.info,  Node: Framed-Route,  Next: State,  Prev: Callback-Id,  Up: Attribute list

Framed-Route
************

     ATTRIBUTE  Framed-Route      22                   string

   This Attribute provides routing information to be configured for the
user on the NAS.  It is used in the Access-Accept packet and can appear
multiple times.


File: radius.info,  Node: State,  Next: Class,  Prev: Framed-Route,  Up: Attribute list

State
*****

     ATTRIBUTE  State             24                   string

   This Attribute is available to be sent by the server to the client
in an Access-Challenge and MUST be sent unmodified from the client to
the server in the new Access-Request reply to that challenge, if any.

   This Attribute is available to be sent by the server to the client
in an Access-Accept that also includes a Termination-Action Attribute
with the value of RADIUS-Request.  If the NAS performs the
Termination-Action by sending a new Access-Request upon termination of
the current session, it MUST include the State attribute unchanged in
that Access-Request.

   In either usage, no interpretation by the client should be made.  A
packet may have only one `State' Attribute.


File: radius.info,  Node: Class,  Next: Vendor-Specific,  Prev: State,  Up: Attribute list

Class
*****

     ATTRIBUTE  Class             25                   string

   This Attribute is available to be sent by the server to the client
in an Access-Accept and should be sent unmodified by the client to the
accounting server as part of the Accounting-Request packet if
accounting is supported.


File: radius.info,  Node: Vendor-Specific,  Next: Session-Timeout,  Prev: Class,  Up: Attribute list

Vendor-Specific
***************

     ATTRIBUTE  Vendor-Specific   26                   string

   This Attribute is available to allow vendors to support their own
extended Attributes not suitable for general usage.  FIXME


File: radius.info,  Node: Session-Timeout,  Next: Idle-Timeout,  Prev: Vendor-Specific,  Up: Attribute list

Session-Timeout
***************

     ATTRIBUTE  Session-Timeout   27                   integer

   This Attribute sets the maximum number of seconds of service to be
provided to the user before termination of the session or prompt.  The
server may send this attribute to the client in an Access-Accept or
Access-Challenge.


File: radius.info,  Node: Idle-Timeout,  Next: Termination-Action,  Prev: Session-Timeout,  Up: Attribute list

Idle-Timeout
************

     ATTRIBUTE  Idle-Timeout      28                   integer

   This Attribute sets the maximum number of consecutive seconds of
idle connection allowed to the user before termination of the session
or prompt.  The server may send this attribute to the client in an
Access-Accept or Access-Challenge.


File: radius.info,  Node: Termination-Action,  Next: Called-Station-Id,  Prev: Idle-Timeout,  Up: Attribute list

Termination-Action
******************

     ATTRIBUTE  Termination-Action  29                   integer
     VALUE      Termination-Action  Default              0
     VALUE      Termination-Action  RADIUS-Request       1

   This Attribute indicates what action the NAS should take when the
specified service is completed.  It is only used in Access-Accept
packets.


File: radius.info,  Node: Called-Station-Id,  Next: Calling-Station-Id,  Prev: Termination-Action,  Up: Attribute list

Called-Station-Id
*****************

     ATTRIBUTE  Called-Station-Id  30                   string

   This Attribute allows the NAS to send in the Access-Request packet
the phone number that the user called, using Dialed Number
Identification (DNIS) or similar technology.  Note that this may be
different from the phone number the call comes in on.  It is only used
in Access-Request packets.


File: radius.info,  Node: Calling-Station-Id,  Next: NAS-Identifier,  Prev: Called-Station-Id,  Up: Attribute list

Calling-Station-Id
******************

     ATTRIBUTE  Calling-Station-Id  31                   string

   This Attribute allows the NAS to send in the Access-Request packet
the phone number that the call came from, using Automatic Number
Identification (ANI) or similar technology.  It is only used in
Access-Request packets.


File: radius.info,  Node: NAS-Identifier,  Next: NAS-Port-Type,  Prev: Calling-Station-Id,  Up: Attribute list

NAS-Identifier
**************

     ATTRIBUTE  NAS-Identifier    32                   string

   This Attribute contains a string identifying the NAS originating the
Access-Request.  It is only used in Access-Request packets.  Either
`NAS-IP-Address'  or `NAS-Identifier' should be present in an
Access-Request packet.

   *Note NAS-IP-Address::.


File: radius.info,  Node: NAS-Port-Type,  Next: Acct-Status-Type,  Prev: NAS-Identifier,  Up: Attribute list

NAS-Port-Type
*************

     ATTRIBUTE  NAS-Port-Type     61                   integer
     VALUE      NAS-Port-Type     Async                0
     VALUE      NAS-Port-Type     Sync                 1
     VALUE      NAS-Port-Type     ISDN                 2
     VALUE      NAS-Port-Type     ISDN-V120            3
     VALUE      NAS-Port-Type     ISDN-V110            4

   This Attribute indicates the type of the physical port of the NAS
which is authenticating the user.  It can be used instead of or in
addition to the `NAS-Port-Id' *Note NAS-Port-Id:: attribute.  It is
only used in Access-Request packets.  Either `NAS-Port' or
`NAS-Port-Type' or both should be present in an Access-Request packet,
if the NAS differentiates among its ports.


File: radius.info,  Node: Acct-Status-Type,  Next: Acct-Delay-Time,  Prev: NAS-Port-Type,  Up: Attribute list

Acct-Status-Type
****************

     ATTRIBUTE       Acct-Status-Type        40      integer
     VALUE           Acct-Status-Type        Start                   1
     VALUE           Acct-Status-Type        Stop                    2
     VALUE           Acct-Status-Type        Alive                   3
     VALUE           Acct-Status-Type        Accounting-On           7
     VALUE           Acct-Status-Type        Accounting-Off          8

   This attribute indicates whether this Accounting-Request marks the
beginning of the user service (Start) or the end (Stop).

   It may also be used to mark the start of accounting (for example,
upon booting) by specifying Accounting-On and to mark the end of
accounting (for example, just before a scheduled reboot) by specifying
Accounting-Off.

   A special value Alive or Interim-Update indicates the packet that
contains some additional data to the initial Start record or to the
last Alive record.


File: radius.info,  Node: Acct-Delay-Time,  Next: Acct-Input-Octets,  Prev: Acct-Status-Type,  Up: Attribute list

Acct-Delay-Time
***************

     ATTRIBUTE       Acct-Delay-Time         41      integer

   This attribute indicates how many seconds the client has been trying
to send this record for, and can be subtracted from the time of arrival
on the server to find the approximate time of the event generating this
Accounting-Request.  (Network transit time is ignored.)


File: radius.info,  Node: Acct-Input-Octets,  Next: Acct-Output-Octets,  Prev: Acct-Delay-Time,  Up: Attribute list

Acct-Input-Octets
*****************

     ATTRIBUTE       Acct-Input-Octets       42      integer

   This attribute indicates how many octets have been received from the
port over the course of this service being provided, and can only be
present in Accounting-Request records where the Acct-Status-Type is set
to Stop.


File: radius.info,  Node: Acct-Output-Octets,  Next: Acct-Session-Id,  Prev: Acct-Input-Octets,  Up: Attribute list

Acct-Output-Octets
******************

     ATTRIBUTE       Acct-Output-Octets      43      integer

   This attribute indicates how many octets have been sent to the port
in the course of delivering this service, and can only be present in
Accounting-Request records where the Acct-Status-Type is set to Stop.


File: radius.info,  Node: Acct-Session-Id,  Next: Acct-Authentic,  Prev: Acct-Output-Octets,  Up: Attribute list

Acct-Session-Id
***************

     ATTRIBUTE       Acct-Session-Id         44      string

   This attribute is a unique Accounting ID to make it easy to match
start and stop records in a log file.  The start and stop records for a
given session must have the same Acct-Session-Id.  An
Accounting-Request packet must have an Acct-Session-Id.  An
Access-Request packet may have an Acct-Session-Id; if it does, then the
NAS must use the same Acct-Session-Id in the Accounting-Request packets
for that session.


File: radius.info,  Node: Acct-Authentic,  Next: Acct-Session-Time,  Prev: Acct-Session-Id,  Up: Attribute list

Acct-Authentic
**************

     ATTRIBUTE       Acct-Authentic          45              integer
     VALUE           Acct-Authentic          RADIUS          1
     VALUE           Acct-Authentic          Local           2
     VALUE           Acct-Authentic          Remote          3

   This attribute may be included in an Accounting-Request to indicate
how the user was authenticated, whether by Radius, the NAS itself, or
another remote authentication protocol.  Users who are delivered
service without being authenticated should not generate Accounting
records.


File: radius.info,  Node: Acct-Session-Time,  Next: Acct-Input-Packets,  Prev: Acct-Authentic,  Up: Attribute list

Acct-Session-Time
*****************

     ATTRIBUTE       Acct-Session-Time       46      integer

   This attribute indicates how many seconds the user has received
service for, and can only be present in Accounting-Request records
where the Acct-Status-Type is set to Stop.


File: radius.info,  Node: Acct-Input-Packets,  Next: Acct-Output-Packets,  Prev: Acct-Session-Time,  Up: Attribute list

Acct-Input-Packets
******************

     ATTRIBUTE       Acct-Input-Packets      47      integer

   This attribute indicates how many packets have been received from
the port over the course of this service being provided to a Framed
User, and can only be present in Accounting-Request records where the
Acct-Status-Type is set to Stop.


File: radius.info,  Node: Acct-Output-Packets,  Next: Acct-Terminate-Cause,  Prev: Acct-Input-Packets,  Up: Attribute list

Acct-Output-Packets
*******************

     ATTRIBUTE       Acct-Output-Packets     48      integer

   This attribute indicates how many packets have been sent to the port
in the course of delivering this service to a Framed User, and can only
be present in Accounting-Request records where the Acct-Status-Type is
set to Stop.


File: radius.info,  Node: Acct-Terminate-Cause,  Next: Auth-Type,  Prev: Acct-Output-Packets,  Up: Attribute list

Acct-Terminate-Cause
********************

     ATTRIBUTE       Acct-Terminate-Cause    49      integer
     VALUE           Acct-Terminate-Cause    User-Request            1
     VALUE           Acct-Terminate-Cause    Lost-Carrier            2
     VALUE           Acct-Terminate-Cause    Lost-Service            3
     VALUE           Acct-Terminate-Cause    Idle-Timeout            4
     VALUE           Acct-Terminate-Cause    Session-Timeout         5
     VALUE           Acct-Terminate-Cause    Admin-Reset             6
     VALUE           Acct-Terminate-Cause    Admin-Reboot            7
     VALUE           Acct-Terminate-Cause    Port-Error              8
     VALUE           Acct-Terminate-Cause    NAS-Error               9
     VALUE           Acct-Terminate-Cause    NAS-Request             10
     VALUE           Acct-Terminate-Cause    NAS-Reboot              11
     VALUE           Acct-Terminate-Cause    Port-Unneeded           12
     VALUE           Acct-Terminate-Cause    Port-Preempted          13
     VALUE           Acct-Terminate-Cause    Port-Suspended          14
     VALUE           Acct-Terminate-Cause    Service-Unavailable     15
     VALUE           Acct-Terminate-Cause    Callback                16
     VALUE           Acct-Terminate-Cause    User-Error              17
     VALUE           Acct-Terminate-Cause    Host-Request            18

   This attribute indicates how the session was terminated, and can
only be present in Accounting-Request records where the Acct-
Status-Type is set to Stop.


File: radius.info,  Node: Auth-Type,  Next: Menu,  Prev: Acct-Terminate-Cause,  Up: Attribute list

Auth-Type
*********

     ATTRIBUTE  Auth-Type         1000                 integer
     VALUE      Auth-Type         Local                0
     VALUE      Auth-Type         System               1
     VALUE      Auth-Type         Crypt-Local          3
     VALUE      Auth-Type         Reject               4
     VALUE      Auth-Type         Mysql                252
     VALUE      Auth-Type         Pam                  253
     VALUE      Auth-Type         Accept               254

   This attribute tells the server which type of authentication to
apply to a paricular user. It can be used in check-pairs of the user's
profile. *Note Authentication::.

   Radius interprets values of `Auth-Type' attribute as follows:

`Local'
     The value of the `Password' attribute from the record is taken as
     a cleantext password and is compaired against the `Password' value
     from the input packet.

`System'
     This means that a user's password is stored in a system password
     type.  Radius queries the operating system to determine if the
     username/password supplied in the incoming packet are OK.

`Crypt-Local'
     The value of the `Password' attribute from the record is taken as
     an MD5 hash on the user's password. Radius generates MD5 hash on
     the supplied `Password' value and compares both strings.

`Reject'
     Authentication fails.

`Accept'
     Authentication succeeds.

`Mysql'
     The MD5-encrypted user's password is queried from the Mysql *Note
     SQL Auth::.

`Pam'
     The username/password combination is checked using PAM.


File: radius.info,  Node: Menu,  Next: Termination-Menu,  Prev: Auth-Type,  Up: Attribute list

Menu
****

     ATTRIBUTE  Menu              1001                 string

   This attribute should be used in the reply pairs. If it is used, it
should be the only reply item.

   The `Menu' attribute specifies the name of the menu to be presented
to the user. The corresponding menu code is looked up in
`RADIUS_DIR/menus/' directory. *Note menus::.


File: radius.info,  Node: Termination-Menu,  Next: Prefix,  Prev: Menu,  Up: Attribute list

Termination-Menu
****************

     ATTRIBUTE  Termination-Menu  1002                 string

   This attribute should be used in the reply pairs. If it is used, it
should be the only reply item.

   The `Termination-Menu' specifies the name of the menu file to be
presented to the user after finishing his session. The corresponding
menu code is looked up in `RADIUS_DIR/menus/' directory. *Note menus::.


File: radius.info,  Node: Prefix,  Next: Suffix,  Prev: Termination-Menu,  Up: Attribute list

Prefix
******

     ATTRIBUTE  Prefix            1003                 string

   The `Prefix' attribute indicates the prefix which the username
should contain in order for a particular record in the profile to be
matched. This attribute should be specified in check-pairs of the
`users' or `hints' file.

   For example, if the `users' file contained:

     DEFAULT Prefix = "U", Auth-Type = System
                     Service-Type = Login-User

then usernames `Ugray' and `Uyoda' would match this record, whereas
`gray' and `yoda' would not.

   Both `Prefix' and `Suffix' attributes may be specified in a profile.
In this case the record is matched only if the username contains both
prefix and suffix specified.

   *Note Suffix:: *Note Strip-User-Name::


File: radius.info,  Node: Suffix,  Next: Group,  Prev: Prefix,  Up: Attribute list

Suffix
******

     ATTRIBUTE  Suffix            1004                 string

   The `Suffix' attribute indicates the suffix which the username
should contain in order for a particular record in the profile to be
matched. This attribute should be specified in check-pairs of the
`users' or `hints' file.

   For example, if the `users' file contained:

     DEFAULT Suffix = ".ppp", Auth-Type = System, Strip-User-Name = Yes
             Service-Type = Framed-User,
                     Framed-Protocol = PPP

then usernames `gray.ppp' and `yoda.ppp' would match this record,
whereas `gray' and `yoda' would not.

   Both `Prefix' and `Suffix' attributes may be specified in a profile.
In this case the record is matched only if the username contains both
prefix and suffix specified.

   *Note Prefix:: *Note Strip-User-Name::


File: radius.info,  Node: Group,  Next: Crypt-Password,  Prev: Suffix,  Up: Attribute list

Group
*****

     ATTRIBUTE  Group             1005                 string


File: radius.info,  Node: Crypt-Password,  Next: Huntgroup-Name,  Prev: Group,  Up: Attribute list

Crypt-Password
**************

     ATTRIBUTE  Crypt-Password    1006                 string

   This attribute is intended to be used in user's profile check-pairs.
It specifies the MD5 hash of the user's password. When this attribute
is present, Auth-Type = Crypt-Local is assumed. If both `Auth-Type' and
`Crypt-Password' are present, the value of `Auth-Type' is ignored.

   *Note Auth-Type::.


File: radius.info,  Node: Huntgroup-Name,  Next: Simultaneous-Use,  Prev: Crypt-Password,  Up: Attribute list

Huntgroup-Name
**************

     ATTRIBUTE  Huntgroup-Name    221                  string

   The `Huntgroup-Name' can be used either in check-pairs of the
`users' file record or in reply-pairs of the `huntgroups' file record.

   When encountered in check-pairlist of a particular `users' profile,
this attribute indicates the huntgroup name to be matched. Radius looks
up the corresponding record in the `huntgroups' file. If such record is
found, each A/V pair from its reply-list is compaired against the
corresponing pair from the request being processed. The request matches
only if it contains all the attributes from the specified huntgroup,
and their values satisfy the conditions listed in the huntgroup pairs.

   For example, suppose that the athentication request contained the
following attrbutes:

     User-Name = "john",
     Password = "guess",
     NAS-IP-Address = 10.11.11.1,
     NAS-Port-Id = 24

Let us further suppose that the `users' file contains the following
entry:

     john    Huntgroup-Name = "users_group",
                     Auth-Type = System
             Service-Type = Login

and, finally, `huntgroups' contains the following entry:

     users_group     NAS-IP-Address = 10.11.11.1
                     NAS-Port-Id < 32

   Then the authentication request would succeed since it contains
`NAS-Port-Id' attribute and its value is less than 32.

   *Note huntgroups::.

