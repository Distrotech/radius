@c This is part of the Radius manual.
@c Copyright (C) 1999,2000,2001,2002,2003 Free Software Foundation, Inc.
@c Written by Sergey Poznyakoff
@c See file radius.texi for copying conditions.
@comment *******************************************************************
@node Problem Tracking, Extensions, Logging, Top
@chapter Problem Tracking
@cindex Problem Tracking

@menu
* Rule Tracing::       Tracing rules.
* Debugging::          Enabling full debugging information.
* Test Mode::          Running radius in test mode.
@end menu

@comment *******************************************************************
@node Rule Tracing
@section Rule Tracing
@cindex Rule Tracing

If you have more than one entry in your @file{users} file it is not
always obvious which of the entries were used for authentication. The
authentication data flow becomes even harder to understand if there
are some complex rules in the @file{hints} and @file{huntgroups}
files.


@smallexample
@group
DEFAULT  Prefix = "tweedle-"
         Scheme-Acct-Procedure = "tweedle-acct",
                   Strip-User-Name = No
@end group
@end smallexample

@smallexample
@group
DEFAULT  Prefix = "tweedle-",
              Auth-Type = SQL,
              Simultaneous-Use = 1
         Service-Type = Login-User,
              Login-IP-Host = 192.168.0.1,
              Login-Service  = Telnet

DEFAULT  Group = "ppp",
              Auth-Type = SQL,
              Simultaneous-Use = 1
        Service-Type = Framed-User,
              Framed-Protocol = PPP
@end group
@end smallexample

@smallexample
@cartouche
Nov 06 21:25:24: Auth.notice: (AUTHREQ local 61 aud):
  Login OK [tweedle-dum], CLID unknown
@end cartouche
@end smallexample

@comment *******************************************************************
@node Debugging
@section Debugging
@cindex Debugging

GNU Radius provides extensive debugging features. These are enabled
either by the @option{--debug} (@option{-x}) command line option to
@command{radiusd} (@pxref{Invocation}), or by the @code{level}
statement in the debug category (@pxref{logging,,logging statement}).
Both cases require as an argument a valid debug specification.

A debug specification sets the module for which the debugging should
be enabled and the debugging level. The higher the level is, the more
detailed information is provided. The module name and level are
separated by an equal sign. If the level is omitted, the highest
possible level (100) is assumed. The module name may be abbreviated
to the first @math{N} characters, in which case the first matching module is
selected. Several such specifications can be specified, in which case
they should be separated by commas. For example, the following is a
valid debug specification:
@smallexample
        proxy.c=10,files.c,config.y=1
@end smallexample

@noindent
It sets debug level 10 for module @code{proxy.c}, 100 for
@code{files.c}, and 1 for @code{config.y}.

The modules and debugging levels are subject to change from release
to release. 

@c The following describes briefly the debugging levels for this release
@c of GNU Radius (@value{VERSION}).

@c @include debug.texinfo

@comment *******************************************************************
@node Test Mode
@section Test Mode
@cindex Test Mode

