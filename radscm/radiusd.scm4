;;;; -*- scheme -*-
;;;; This file is part of GNU Radius.
;;;; Copyright (C) 2004, 2007, 2008, 2010, 2013 Free Software Foundation, Inc.
;;;;
;;;; Written by Sergey Poznyakoff
;;;;
;;;; GNU Radius is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 3 of the License, or
;;;; (at your option) any later version.
;;;;
;;;; GNU Radius is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with GNU Radius.  If not, see <http://www.gnu.org/licenses/>.
;;;;
changequote([,])dnl
undefine([define])

(define-module (radiusd)
  :use-module (guile-user))

(define auth-mod-list '())

(define-public (radiusd-register-auth-method auth-type handler)
  (set! auth-mod-list (cons (cons auth-type handler) auth-mod-list)))

(define-public (radiusd-try-auth auth-type req check reply)
  (let ((x (assoc (rad-dict-value->name "Auth-Type" auth-type)
		  auth-mod-list)))
    (if x
	((cdr x) req check reply)
	#f)))

;;;; End of radiusd.scm
