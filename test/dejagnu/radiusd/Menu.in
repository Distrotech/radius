set message "Checking Menus"
clone_output "$message"

default_radiusd_version

if { [info exists CAPABILITY(USE_LIVINGSTON_MENUS)] } {
    radius_send "send auth 1 User-Name = \"menu\"\n"
    radius_expect 10 {
	-re "$radtest_prompt" {}
	timeout {
	    fail "$message (timeout)"
	}
    }

    radius_send "print \$REPLY\[Reply-Message*\]\n"
    radius_expect 10 {
	
        -ex "*** This is a test Menu coming from RADIUS ***\r\r\n\r\r\nMenus can contain up to 1500 bytes of data.  They can contain\r\r\nany non-null characters.  Option selections require an exact match.\r\r\nIf case insensitivity is required, enter the menu choices twice,\r\r\nonce in upper and once in lower case.\r\r\n\r\r\nPlease enter an option:\r\r\n\r\r\n1 Start PPP session\r\r\n2 Start CSLIP session\r\r\n3 Start SLIP session\r\r\n4 Start login session\r\r\n5 Go to second menu\r\r\n6 Exit\r\r\n\r\r\nOption: " {
	    pass "$message: First menu"
       }

	default {
	    fail "$message"
	}
    }

    radius_send "send auth 1 User-Name = \"menu\" Password = \"5\" State = \"MENU=menu1\"\n"
    radius_expect 10 {
	-re "$radtest_prompt" {}
	timeout {
	    fail "$message (timeout)"
	}
    }

    radius_send "print \$REPLY\[Reply-Message*\]\n"
    radius_expect 10 {
	-ex "*** This is a test Menu coming from RADIUS ***\r\r\n\r\r\nMenus can call other menus.\r\r\nThis menu is called when option 5 of menu1 is selected.\r\r\nMenu choices can be words as well as numbers.\r\r\n\r\r\nPlease enter an option:\r\r\n\r\r\nra       Connect to host ra\r\r\nsol      Connect to host sol\r\r\nweevil   Connect to host weevil\r\r\ntop      Return to top level menu\r\r\nquit     Quit\r\r\n\r\r\nOption: " {
	    pass "$message: Second menu"
	}
	default {
	    fail "$message"
	}
    }

    radius_test -message "$message: Termination action" "auth 1 User-Name = \"menu\" Password = \"sol\" State = \"MENU=menu2\"" "2 Service-Type = 1 Login-IP-Host = \"127.0.0.1\" State = \"MENU=\menu2\" Termination-Action = 1" 
    
} else {
    unsupported "$message"
}
		

